#summary Configuration

The [http://code.google.com/p/aic-util/source/browse/trunk/src/main/java/com/sri/ai/util/Configuration.java Configuration] utility is a simple API/Convention for retrieving typed configuration information. Defaults are set programmatically, which can be overridden by setting system properties corresponding to the property at run time, e.g.:
{{{
java <main class> -Dconfig.property.name=<a value>
}}}
These can again be overridden with a configuration file expressed in java.util.prefs.Preferences.exportNode() format:
{{{
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd">
<preferences EXTERNAL_XML_VERSION="1.0">
  <root type="user">
    <map>
      <entry key="key1" value="value1"/>
      <entry key="key2" value="value2"/>
      <entry key="key3" value="value3"/>
    </map>
  </root>
</preferences>
}}}

Configurations are initialized from configuration files based on their name in the following order:
  * The configuration utility tries to find a file called aic-smf-config-local.xml in the classpath.
  * If no such file is found, it tries to find a file called aic-smf-config-test.xml in the classpath.
  * If no such file is found, it tries to find a file called aic-smf-config.xml in the classpath.
  * If a configuration file is found, only the properties defined in the file will override the programmatically and system property defined values.
  * If no configuration file is found, only the programmatic defaults and system property overrides are used to initialize properties.
 
== Configurations Per-Thread Support ==

== Usage Convention ==